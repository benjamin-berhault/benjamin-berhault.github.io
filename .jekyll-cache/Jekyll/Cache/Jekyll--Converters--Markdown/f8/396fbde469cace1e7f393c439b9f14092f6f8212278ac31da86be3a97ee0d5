I",<div class="row">
  <div class="col grid s12 m6 l3">
    <img src="/images/postgresql.png" class="responsive-img" />
  </div>
  <div class="col grid s12 m6 l9 ">
    As a CentOS/RHEL 7 user, for lot of different reasons, you could have the needs to have a relational database management system with an extensible amount of space on your personnal laptop. First in that case PostgreSQL is a serious candidate  The problem with a regular PostgreSQL installation on CentOS is that you will end up installing it on your root partition that are not made by default to handle a huge amount of data. In my case I have just one disk so that I want the data be host on the home partition.
  </div>
</div>

<p>Install Azure Data Studio</p>
<ul>
  <li>https://docs.microsoft.com/en-us/sql/azure-data-studio/download?view=sql-server-2017
    <pre><code class="language-console">sudo yum install ./Downloads/azuredatastudio-linux-1.4.5.rpm
</code></pre>
  </li>
</ul>

<p>Launch Azure Data Studio</p>
<pre><code class="language-console">azuredatastudio
</code></pre>

<p>Install Microsoft SQL Server (https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-red-hat?view=sql-server-2017)</p>
<pre><code class="language-console">sudo curl -o /etc/yum.repos.d/mssql-server.repo https://packages.microsoft.com/config/rhel/7/mssql-server-preview.repo
sudo yum update mssql-server
</code></pre>

<p>SQL Server command-line tools installation
Download the Microsoft Red Hat repository configuration file.</p>
<pre><code class="language-console">sudo curl -o /etc/yum.repos.d/msprod.repo https://packages.microsoft.com/config/rhel/7/prod.repo
</code></pre>

<p>Remove previous version of mssql-tools installed</p>
<pre><code class="language-console">sudo yum remove unixODBC*
</code></pre>

<p>Install mssql-tools with the unixODBC developer package</p>
<pre><code class="language-console">sudo yum install -y mssql-tools unixODBC-devel
</code></pre>

<p>For convenience, add /opt/mssql-tools/bin/ to your PATH environment variable.</p>
<pre><code class="language-console">echo 'export PATH="$PATH:/opt/mssql-tools/bin"' &gt;&gt; ~/.bash_profile
echo 'export PATH="$PATH:/opt/mssql-tools/bin"' &gt;&gt; ~/.bashrc
source ~/.bashrc
</code></pre>

<p>Connect locally</p>
<pre><code class="language-console">sqlcmd -S localhost -U SA -P '&lt;YourPassword&gt;'
</code></pre>

<h2 id="change-the-default-data-or-log-directory-location">Change the default data or log directory location</h2>
<p>Reference: https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-mssql-conf?view=sql-server-2017</p>

<p>The default data or log directory location is /var/opt/mssql/data. To change these settings, use the following steps:</p>

<p>Create the target directory for new database data and log files.</p>
<pre><code class="language-console">sudo mkdir -p /home/mssql/data
</code></pre>

<p>Change the owner and group of the directory to the mssql user:
bash</p>
<pre><code class="language-console">sudo chown mssql /home/mssql/data
sudo chgrp mssql /home/mssql/data
</code></pre>
<p>Use mssql-conf to change the default data directory with the set command:
bash</p>
<pre><code class="language-console">sudo /opt/mssql/bin/mssql-conf set filelocation.defaultdatadir /home/mssql/data
</code></pre>
<p>Restart the SQL Server service:</p>
<pre><code class="language-console">sudo systemctl restart mssql-server
</code></pre>

<p>To change the location of the log (.ldf) files of the new databases.</p>

<p>Create a /home/msdata/log directory, and change aowner and group.</p>
<pre><code class="language-console">sudo mkdir /home/mssql/log
sudo chown mssql /home/mssql/log
sudo chgrp mssql /home/mssql/log
</code></pre>
<p>Change the location of the log (.ldf) files of the new databases</p>
<pre><code class="language-console">sudo /opt/mssql/bin/mssql-conf set filelocation.defaultlogdir /home/mssql/log
</code></pre>

<p>Change the default master database file directory location</p>

<p>The default master database file directory location is /var/opt/mssql/data.</p>

<p>Create the target directory for new error log files.</p>
<pre><code class="language-console">sudo mkdir /home/mssql/masterdatabasedir
</code></pre>

<p>Change the owner and group of the directory to the mssql user:</p>
<pre><code class="language-console">sudo chown mssql /home/mssql/masterdatabasedir
sudo chgrp mssql /home/mssql/masterdatabasedir
</code></pre>

<p>Change the default master database directory for the master data and log files:</p>
<pre><code class="language-console">sudo /opt/mssql/bin/mssql-conf set filelocation.masterdatafile /home/mssql/masterdatabasedir/master.mdf
sudo /opt/mssql/bin/mssql-conf set filelocation.masterlogfile /home/mssql/masterdatabasedir/mastlog.ldf
</code></pre>

<pre><code>In addition to moving the master data and log files, this also moves the default location for all other system databases.
</code></pre>

<p>Stop the SQL Server service:</p>
<pre><code class="language-console">sudo systemctl stop mssql-server
</code></pre>

<p>Move the master.mdf and masterlog.ldf:</p>

<pre><code class="language-console">sudo mv /var/opt/mssql/data/master.mdf /home/mssql/masterdatabasedir/master.mdf 
sudo mv /var/opt/mssql/data/mastlog.ldf /home/mssql/masterdatabasedir/mastlog.ldf
</code></pre>

<p>Start the SQL Server service:</p>
<pre><code class="language-console">sudo systemctl start mssql-server
</code></pre>

<h2 id="connect-with-azure-data-studio">Connect with Azure Data Studio</h2>
<ul>
  <li>Connection type: Microsoft SQL Server</li>
  <li>Server: localhost</li>
  <li>Authentication type: SQL Login</li>
  <li>User name: SA</li>
  <li>Password:</li>
</ul>
:ET