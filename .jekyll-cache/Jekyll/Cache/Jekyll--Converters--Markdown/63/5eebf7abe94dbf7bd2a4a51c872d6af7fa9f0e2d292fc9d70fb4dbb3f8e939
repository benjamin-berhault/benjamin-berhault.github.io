I"H<div class="row">
  <div class="col grid s12 m6 l3">
    <img src="/images/node_js.png" class="responsive-img" />
  </div>
  <div class="col grid s12 m6 l9 ">
    Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. As an asynchronous event driven JavaScript runtime, Node is designed to build scalable network applications.
  </div>
</div>

<h2 id="install-nodejs-and-npm">Install Node.js and npm</h2>
<p><b>References:</b></p>
<ul>
  <li><a href="https://github.com/nodesource/distributions">Node.js GitHub repo</a></li>
  <li><a href="https://nodejs.org/en/">Node.js official website</a></li>
</ul>

<p>Update the system and install necessary packages</p>
<pre><code class="language-bash">sudo yum install curl
</code></pre>

<p>We will install Node.js v6 LTS and npm from the NodeSource repository which depend on the EPEL repository being available.</p>

<p>To enable the EPEL repository on your CentOS 7 VPS, issue the following command:</p>
<pre><code class="language-bash">sudo yum install epel-release
</code></pre>

<p>Once the EPEL repository is enabled run the following command to add the Node.js v12 repository:</p>
<pre><code class="language-bash">curl --silent --location https://rpm.nodesource.com/setup_12.x | sudo bash -
</code></pre>

<p>Install</p>

<p>Once the NodeSource repository is enabled we can proceed with the Node.js v12 and npm installation:</p>
<pre><code class="language-bash">sudo yum install -y nodejs
</code></pre>

<p>To verify if the Node.js installation was successful, issue the following command:</p>
<pre><code class="language-bash">node -v
</code></pre>

<p>The output should be like the following:</p>
<pre><code class="language-bash">v12.4.0
</code></pre>

<p>To verify if the npm installation was successful, issue the following command:</p>
<pre><code class="language-bash">npm -v
</code></pre>

<p>The output should be like the following:</p>
<pre><code class="language-bash">6.4.1
</code></pre>

<p>If you want to test the installation, create a test file:</p>
<pre><code class="language-bash">vi hello_world.js
</code></pre>

<p>and then add the following content:</p>
<pre><code class="language-js">const http = require('http');
const port = 3000;
const ip = '0.0.0.0';

http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello World');
}).listen(port, ip);

console.log(`server is running on ${ip}:${port}`);
</code></pre>

<p>Start the node web server by issuing the following command:</p>
<pre><code class="language-bash">node hello_world.js
</code></pre>

<p>the output should be like the following:</p>
<pre><code class="language-bash">server is running on 0.0.0.0:3000
</code></pre>

<p>If you now visit http://your_server_IP:3000 from your browser, you will see â€˜Hello Worldâ€™.</p>

<h2 id="prevent-permissions-errors-change-npms-default-directory">Prevent Permissions Errors: Change npmâ€™s Default Directory</h2>
<p><b>Source:</b> <a href="https://docs.npmjs.com/getting-started/fixing-npm-permissions">How to Prevent Permissions Errors</a></p>

<p>To minimize the chance of permissions errors, you can configure npm to use a different directory. In this example, it will be a hidden directory on your home folder.</p>

<p>Make a directory for global installations:</p>
<pre><code class="language-bash">mkdir ~/.npm-global
</code></pre>

<p>Configure npm to use the new directory path:</p>
<pre><code class="language-bash">npm config set prefix '~/.npm-global'
</code></pre>

<p>Open or create a ~/.bashrc file and add this line:</p>
<pre><code class="language-bash">export PATH=$PATH:~/.npm-global/bin
</code></pre>
<p>Back on the command line, update your system variables:</p>
<pre><code class="language-bash">source ~/.bashrc
</code></pre>
<p>Test: Download a package globally without using sudo.</p>
<pre><code class="language-bash">npm install -g express
</code></pre>
:ET