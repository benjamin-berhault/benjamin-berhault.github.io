I"Ü<div class="row">
  <div class="col grid s12 m6 l3">
    <img src="/images/boost.png" class="responsive-img" />
  </div>
  <div class="col grid s12 m6 l9 ">
    Boost provides free peer-reviewed portable C++ source libraries. Libraries are intended to work well with the C++ Standard Library. Boost libraries are intended to be widely useful, and usable across a broad spectrum of applications. The Boost license encourages both commercial and non-commercial use.
  </div>
</div>

<p><b>Reference:</b> <a href="https://www.boost.org/">https://www.boost.org/</a></p>

<h3>Prerequisite</h3>
<ul>
  <li>GCC installed</li>
</ul>

<h3>Installation</h3>
<p>Check the last archive of Boost C++ libraries available from: <a href="https://www.boost.org/users/download/">https://www.boost.org/users/download/</a></p>

<p>Download it on your machine.</p>
<pre><code class="language-bash">cd ~/Downloads
wget https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2
tar jxf boost_1_70_0.tar.bz2
</code></pre>

<p>Some <code>tar</code> options are:</p>
<ul>
  <li><code>x</code> - extract</li>
  <li><code>v</code> - verbose output (lists all files as they are extracted)</li>
  <li><code>j</code> - deal with bzipped file</li>
  <li><code>f</code> - read from a file, rather than a tape device</li>
</ul>

<p>Build Boost</p>
<pre><code class="language-bash">cd ./boost_1_70_0
mkdir ~/.local/boost-libs
./bootstrap.sh --prefix=$HOME/.local/boost-libs
./b2 install
</code></pre>

<p>Make Boost available for your environment:</p>
<pre><code class="language-bash">vi ~/.bashrc
</code></pre>

<p>Add at the end of <b>~/.bashrc</b>:</p>
<pre><code class="language-bash">export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:~/.local/boost-libs/include
export LIBRARY_PATH=$LIBRARY_PATH:~/.local/boost-libs/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/.local/boost-libs/lib
</code></pre>

<p><b>LD_LIBRARY_PATH</b> is used by your program to search directories containing shared libraries after it has been successfully compiled and linked.
<code>LD_LIBRARY_PATH</code> is for dynamically linked (<code>.so</code>) libraries.</p>

<p><b>LIBRARY_PATH</b> is used by gcc before compilation to search directories containing static libraries that need to be linked to your program.
<code>LIBRARY_PATH</code> for static (<code>.a</code>) libraries.</p>

<p>Reload <b>~/.bashrc</b>:</p>
<pre><code class="language-bash">source ~/.bashrc
</code></pre>

<p>or you can also use the shorter version of the command:</p>
<pre><code class="language-bash">. ~/.bashrc
</code></pre>

<h3>Test it</h3>

<p>Edit a script <b><code>Hello.cpp</code></b> to check if Boost has been properly installed</p>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;boost/format.hpp&gt;

using namespace std;
using namespace boost;

int main()
{
    unsigned int arr[5] = { 0x05, 0x04, 0xAA, 0x0F, 0x0D };
    cout &lt;&lt; format("%02X-%02X-%02X-%02X-%02X")
            % arr[0]
            % arr[1]
            % arr[2]
            % arr[3]
            % arr[4]
         &lt;&lt; endl;
}
</code></pre>

<p>Compile and run this script</p>
<pre><code class="language-bash">g++ --std=c++14 Hello.cpp -o run
./run
</code></pre>

<p>Should return</p>
<pre><code class="language-bash">05-04-AA-0F-0D
</code></pre>
:ET